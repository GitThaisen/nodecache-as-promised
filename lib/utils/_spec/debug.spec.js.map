{"version":3,"sources":["../../../src/utils/_spec/debug.spec.js"],"names":["describe","it","waiting","Date","getTime","key","value","created","TTL","full","debugKey","to","eql","expired","started","wait","waitUntil","maxAge","cache","max","entry","hello","entry2","foo","entry3","set","search","Map","now","info","itemCount","keys","hot","expires","stale"],"mappings":"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","file":"debug.spec.js","sourcesContent":["import {\n  getCacheInfo,\n  buildKey\n} from '../debug'\nimport expect from 'expect.js'\nimport lruCache from 'lru-cache'\nimport {\n  createEntry,\n  createWait\n} from '../cache-helpers'\n\ndescribe('debug', () => {\n  describe('-> formatWait', () => {\n    it('should print waiting if wait is set', () => {\n      // const isWaiting = formatWait(createWait(10000, new Date('2017-09-05T08:00:00Z').getTime()))\n      const waiting = createWait(10000, new Date('2017-09-04T08:01:00Z').getTime())\n      const key = 'hei'\n      const value = {\n        value: 'verden',\n        created: new Date('2017-09-04T08:00:00Z').getTime(),\n        TTL: 60000\n      }\n      const full = false\n      const debugKey = buildKey({key, value, waiting, full})\n      expect(debugKey).to.eql({\n        key: 'hei',\n        created: new Date('2017-09-04T08:00:00.000Z'),\n        expired: new Date('2017-09-04T08:01:00.000Z'),\n        waiting: {\n          started: new Date('2017-09-04T08:01:00.000Z'),\n          wait: 10000,\n          waitUntil: new Date('2017-09-04T08:01:10.000Z')\n        }\n      })\n    })\n\n    it('should not print waiting if wait is not set', () => {\n      const key = 'hei'\n      const value = {\n        value: 'verden',\n        created: new Date('2017-09-04T08:00:00Z').getTime(),\n        TTL: 60000\n      }\n      const full = false\n      const debugKey = buildKey({key, value, full})\n      expect(debugKey).to.eql({\n        key: 'hei',\n        created: new Date('2017-09-04T08:00:00.000Z'),\n        expired: new Date('2017-09-04T08:01:00.000Z')\n      })\n    })\n  })\n\n  describe('getCacheInfo', () => {\n    it('should print debug info from cache', () => {\n      const maxAge = 10000\n      const cache = lruCache({\n        max: 100,\n        maxAge\n      })\n\n      const entry = {...createEntry({hello: 'world'}, 12345), cache: 'hit'}\n      const entry2 = {...createEntry({foo: 'bar'}, 12345), cache: 'hit'}\n      const entry3 = {...createEntry({hello: 'world'}, -1), cache: 'hit'}\n      cache.set('yo', entry)\n      cache.set('notinresults', entry2)\n      cache.set('yo2', entry3)\n      // omit now and waiting field\n      const {now, waiting, ...info} = getCacheInfo({\n        full: true,\n        search: 'yo*',\n        cache,\n        maxAge,\n        waiting: new Map()\n      })\n      expect(info).to.eql({\n        full: true,\n        itemCount: 3,\n        keys: {\n          hot: [\n            {\n              created: new Date(entry.created),\n              expires: new Date(entry.created + entry.TTL),\n              key: 'yo',\n              value: {\n                hello: 'world'\n              }\n            }\n          ],\n          stale: [{\n            created: new Date(entry3.created),\n            expired: new Date(entry3.created + entry3.TTL),\n            key: 'yo2',\n            value: {\n              hello: 'world'\n            }\n          }]\n        },\n        maxAge: '0.002777777777777778h',\n        search: 'yo*'\n      })\n    })\n  })\n})\n"]}