{"version":3,"sources":["../../../src/utils/_spec/cache-helpers.spec.js"],"names":["describe","it","waiting","to","eql","started","wait","waitUntil","equal","obj","hello","entry","only","have","keys","value","done","p","Promise","resolve","spy","obs","subscribe","setTimeout","Function","prototype","err","be","an","Error","re"],"mappings":"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","file":"cache-helpers.spec.js","sourcesContent":["import {\n  createEntry,\n  createObservable,\n  createWait,\n  createRegExp,\n  isFresh,\n  isWaiting\n} from '../cache-helpers'\nimport sinon from 'sinon'\nimport expect from 'expect.js'\n\ndescribe('cache-helpers', () => {\n  describe('createWait', () => {\n    it('should create a wait object', () => {\n      const waiting = createWait(100, 200)\n      expect(waiting).to.eql({\n        started: 200,\n        wait: 100,\n        waitUntil: 300\n      })\n    })\n  })\n\n  describe('-> isWaiting', () => {\n    it('should return true if waiting', () => {\n      expect(isWaiting(createWait(1000))).to.equal(true)\n    })\n\n    it('should return false if waiting is finished', () => {\n      expect(isWaiting(createWait(-1000))).to.equal(false)\n    })\n\n    it('should return false if not waiting', () => {\n      expect(isWaiting()).to.equal(false)\n    })\n  })\n\n  describe('-> isFresh', () => {\n    it('should return true if TTL is not reached', () => {\n      expect(isFresh(createEntry('yo', 1000))).to.equal(true)\n    })\n\n    it('should return false if TTL is reached', () => {\n      expect(isFresh(createEntry('yo', -1000))).to.equal(false)\n    })\n  })\n\n  describe('-> createEntry', () => {\n    it('should create a wrapper object with metadata for cached', () => {\n      const obj = {hello: 'world'}\n      const entry = createEntry(obj, 10)\n      expect(entry).to.only.have.keys(['created', 'TTL', 'value'])\n      expect(entry.value).to.eql(obj)\n    })\n  })\n\n  describe('-> createObservable', () => {\n    it('should create an Observable with subscription capabilities from promise', (done) => {\n      const p = () => Promise.resolve()\n      const spy = sinon.spy(p)\n      const obs = createObservable(spy, 0)\n      obs.subscribe(() => done())\n    })\n\n    it('should create an Observable from promise with timeout support', (done) => {\n      const p = () => setTimeout(() => Promise.resolve(), 10)\n      const spy = sinon.spy(p)\n      const obs = createObservable(spy, 0)\n      obs.subscribe(Function.prototype, (err) => {\n        expect(err).to.be.an(Error)\n        done()\n      })\n    })\n  })\n\n  describe('-> createRegExp', () => {\n    it('should create a regexp from a string', () => {\n      const re = createRegExp('/houses/2')\n      expect(re).to.eql(/\\/houses\\/2/)\n    })\n\n    it('should support * to .* rewrite', () => {\n      const re = createRegExp('/houses/2*')\n      expect(re).to.eql(/\\/houses\\/2.*/)\n    })\n\n    it('should support ? to \\\\? rewrite', () => {\n      const re = createRegExp('/houses/2?hallo')\n      expect(re).to.eql(/\\/houses\\/2\\?hallo/)\n    })\n\n    it('should support . to \\\\. rewrite', () => {\n      const re = createRegExp('/houses/2.hallo')\n      expect(re).to.eql(/\\/houses\\/2\\.hallo/)\n    })\n\n    it('should support [ to \\\\[ rewrite', () => {\n      const re = createRegExp('/houses/2hallo[')\n      expect(re).to.eql(/\\/houses\\/2hallo\\[/)\n    })\n\n    it('should support ] to \\\\] rewrite', () => {\n      const re = createRegExp('/houses/2hallo]')\n      expect(re).to.eql(/\\/houses\\/2hallo\\]/)\n    })\n\n    it('should support ^ to \\\\^ rewrite', () => {\n      const re = createRegExp('/houses/2hallo^')\n      expect(re).to.eql(/\\/houses\\/2hallo\\^/)\n    })\n\n    it('should support $ to \\\\$ rewrite', () => {\n      const re = createRegExp('/houses/2hallo$')\n      expect(re).to.eql(/\\/houses\\/2hallo\\$/)\n    })\n\n    it('should rewrite urls', () => {\n      const re = createRegExp('http://localhost.no/?param1=yo&param2=yo')\n      expect(re).to.eql(/http:\\/\\/localhost\\.no\\/\\?param1=yo&param2=yo/)\n    })\n  })\n})\n"]}